#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
#include <Servo.h>

int LEDLose = 3; //LED  pin D3
int LEDWin = 5; //LED  pin D5

int SONIDO = 6; //Buzzer pin D8

int BOTON = 2; //Boton pin D2

int PIR = 4; //Sensor infrarrojos pin A4
int pirState = LOW; //Estado inicial del PIR

Servo servoMotor; //Servomotor

LiquidCrystal_I2C lcd(0x27,16,2); //Inicializacion pantalla 16X2

//Variables Maquina Tragaperras
int val;
int pos1;
int pos2;
int pos3;


byte corazon[8] = {
  0b00000000,
  0b00001010,
  0b00010101,
  0b00010001,
  0b00001010,
  0b00000100,
  0b00000000,
  0b00000000,
};

byte cereza[8] = {
  0b00000000,
  0b00000001,
  0b00001001,
  0b00001011,
  0b00011011,
  0b00011000,
  0b00000000,
  0b00000000,
};

byte diamante[8] = {
  0b00000000,
  0b00001110,
  0b00011011,
  0b00010101,
  0b00001010,
  0b00000100,
  0b00000000,
  0b00000000,
};

void winSong(int tonePin){
  	tone(tonePin, 987, 300);
  	delay(300);
	  tone(tonePin, 523, 300);
  	delay(300);
  	tone(tonePin, 987, 300);
    delay(500);
  	tone(tonePin, 523, 300);
  	delay(300);
  	tone(tonePin, 987, 300);

}


void setup() {
  // Inicializar el LCD
  lcd.init();
  lcd.backlight(); //Encender la luz de fondo

  //Declarar los elementos como INPUT y OUTPUT
  pinMode(LEDLose, OUTPUT);
  pinMode(LEDWin, OUTPUT);
  pinMode(PIR, INPUT);
  pinMode(BOTON, INPUT);

  //Semilla aleatoria
  randomSeed(analogRead(0));

  //Inicializar figuras
  lcd.createChar(0, corazon);
  lcd.createChar(1, cereza);
  lcd.createChar(2, diamante);

  //Servo pin D9
  servoMotor.attach(9);
}

void loop() {
  servoMotor.write(0); //Posicion inicial servo.
  lcd.setCursor(0, 0);
  lcd.print("Inserte Moneda");

  if(digitalRead(PIR) == HIGH){ //Si el sensor Detecta moneda 
    lcd.clear();
    lcd.print("Pulse Boton");
    while(digitalRead(BOTON) == HIGH){}//Esperar a que el usuario pulse el boton.

    //Inicializar el funcionamiento de la tragaperras
    pos1 = random(10);
    pos2 = random(10);
    pos3 = random(10);

    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("   X   X   X    ");

    //animacion de la maquina
    for(int columna = 0; columna < 3; columna++){
      for(int retardo = 1; retardo < 4; retardo++){
        for(int i = 0; i < 10; i++){
          lcd.setCursor(3 + (columna * 4), 0);
          int numero = random(10);
          switch(numero){
            case 6:
              lcd.write((byte)0);
              break;
            case 8:
              lcd.write((byte)1);
              break;
            case 9:
              lcd.write((byte)2);
              break;
            default:
              lcd.print(numero);
          }
          delay(50 + (retardo * 100));
        }
      }

      // colocar el numero obtenido en la posicion
      lcd.setCursor(3 + (columna * 4), 0);
      switch(columna){
        case 0:
          val = pos1;
          break;
        case 1:
          val = pos2;
          break;
        case 2:
          val = pos3;
          break;
      }

      switch(val){
        case 6:
          lcd.write((byte)0);
          break;
        case 8:
          lcd.write((byte)1);
          break;
        case 9:
          lcd.write((byte)2);
          break;
        default:
          lcd.print(val);
      }
    }

    //Premios
    lcd.setCursor(0, 1);
    if((pos1 == pos2) && (pos1 == pos3)){
      lcd.print("Premio Gordo");
      analogWrite(LEDWin, 255);
      winSong(SONIDO);
      servoMotor.write(90);
      delay(20000);
      analogWrite(LEDWin, 0);
      servoMotor.write(0); //Posicion inicial servo.
      delay(5000);
    } else{
      lcd.print("Sigue jugando");
      analogWrite(LEDLose, 255);
      delay(3000);
      analogWrite(LEDLose, 0);
    }
    lcd.clear();

    //colocar el estado del sensro PIR en LOW para que pueda detectar otra moneda
    if (pirState == LOW){
      pirState = HIGH;
    }
  }
}
